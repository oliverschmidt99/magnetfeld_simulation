import os

# --- Zu l√∂schende Dateien ---
files_to_delete = [
    # Veraltete Seiten und Skripte des interaktiven Konfigurators
    os.path.join("templates", "simulation_v2.html"),
    os.path.join("static", "js", "simulation_v2.js"),
    os.path.join("static", "css", "simulation_v2.css"),
    # Testdateien, die wahrscheinlich nicht mehr ben√∂tigt werden
    os.path.join("conf", "new.json"),
    "test.drawio",
]


# --- Haupt-Logik ---
def cleanup_project():
    """L√∂scht die definierten, nicht mehr ben√∂tigten Dateien."""
    print("Starte Projekt-Aufr√§umaktion...")

    deleted_count = 0

    for file_path in files_to_delete:
        try:
            if os.path.exists(file_path):
                os.remove(file_path)
                print(f"üóëÔ∏è Datei gel√∂scht: {file_path}")
                deleted_count += 1
            else:
                print(
                    f"‚ö†Ô∏è Datei nicht gefunden (vielleicht schon gel√∂scht?): {file_path}"
                )
        except OSError as e:
            print(f"‚ùå Fehler beim L√∂schen von {file_path}: {e}")

    print(f"\nAufr√§umen abgeschlossen. {deleted_count} Datei(en) wurden entfernt.")


if __name__ == "__main__":
    # Sicherheitsabfrage vor dem L√∂schen
    confirm = input(
        "Sollen die oben definierten, veralteten Dateien wirklich gel√∂scht werden? (j/n): "
    )
    if confirm.lower() == "j":
        cleanup_project()
    else:
        print("Aktion abgebrochen.")
